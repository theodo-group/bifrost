on:
  pull_request:
    types: [opened, synchronize, reopened]

# cancel previous runs on the same PR
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

name: ‚õ∑ PR tests

env:
  CI: true
  NODE_VERSION: 16

defaults:
  run:
    shell: bash

jobs:
  build:
    name: üèó Build Project
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      affected_apps: ${{ steps.get-project-changes.outputs.affected_apps }}
      affected_libs: ${{ steps.get-project-changes.outputs.affected_libs }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - name: Install & cache node dependencies
        uses: ./.github/actions/install-node-deps
      - name: Package and cache builds
        uses: ./.github/actions/package
      - name: Get project changes
        id: get-project-changes
        uses: ./.github/actions/get-project-changes

  app-lint-and-tests:
    name: üèõ App Tests
    needs: build
    runs-on: ubuntu-latest
    if: join(fromJson(needs.build.outputs.affected_apps)) != ''
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        AFFECTED_APP: ${{ fromJson(needs.build.outputs.affected_apps) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run tests
        uses: ./.github/actions/lint-and-tests
        with:
          path: ${{ matrix.AFFECTED_APP }}

  library-lint-and-tests:
    name: üìö Library Tests
    needs: build
    runs-on: ubuntu-latest
    if: join(fromJson(needs.build.outputs.affected_libs)) != ''
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        AFFECTED_LIB: ${{ fromJson(needs.build.outputs.affected_libs) }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run tests
        uses: ./.github/actions/lint-and-tests
        with:
          path: ${{ matrix.AFFECTED_LIB }}

  validate-pr:
    name: ‚úÖ Validate the PR
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build, library-lint-and-tests, app-lint-and-tests]
    steps:
      - name: Validate build
        run: |
          if [[ ${{ needs.build.result }} = "failure" ]]; then
            echo "build failed"
            exit 1
          fi
      - name: Validate app tests
        run: |
          if [[ ${{ needs.app-lint-and-tests.result }} = "failure" ]]; then
            echo "App tests failed"
            exit 1
          fi
      - name: Validate library tests
        run: |
          if [[ ${{ needs.library-lint-and-tests.result }} = "failure" ]]; then
            echo "Library tests failed"
            exit 1
          fi

  deploy-docs-preview-to-netlify:
    name: üöÄ Deploy docs preview to Netlify
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Use cached project dependencies
        uses: ./.github/actions/cache-project-dependencies
      - name: Build docs
        run: |
          cd user-docs/documentation
          yarn build
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './user-docs/documentation/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: '#${{ github.event.number }}: ${{ github.event.pull_request.title }}'
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          alias: docs-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
